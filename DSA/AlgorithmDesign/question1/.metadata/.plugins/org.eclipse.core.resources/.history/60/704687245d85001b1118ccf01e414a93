package com.dictionary;
import java.util.*;
import static org.junit.Assert.*;

import org.junit.Test;

public class TestBSTDictionary {

	@Test
	public void testConstructor() {
		String input = "{\"values\":[{\"key\" : \"1\", \"value\" : \"abcd\"},{\"key\" : \"2\", \"value\" : \"lmno\"}]}";
		BSTDictionary d = new BSTDictionary(input);
		List<Node> listOfKeyValue = new ArrayList<Node>();
		d.getSorted(d.getRoot(), listOfKeyValue);
		System.out.println(d.getRoot().getKey());
		String [] ans = {"abcd","lmno"};
		for(int i = 0 ; i < 2 ; i++){
			assertEquals(0, ans[i].compareTo(listOfKeyValue.get(i).getValue()));
		}
	}
	@Test
	public void testAdd() {
		String input = "{\"values\":[{\"key\" : \"1\", \"value\" : \"abcd\"},{\"key\" : \"2\", \"value\" : \"lmno\"}]}";
		BSTDictionary d = new BSTDictionary(input);
		d.add("0","xyz",d.getRoot());
		List<Node> listOfKeyValue = new ArrayList<Node>();
		d.getSorted(d.getRoot(), listOfKeyValue);
		System.out.println(d.getRoot().getKey());
		String [] ans = {"abcd","lmno","xyz"};
		for(int i = 0 ; i < 2 ; i++){
			assertEquals(0, ans[i].compareTo(listOfKeyValue.get(i).getValue()));
		}
	}

}
